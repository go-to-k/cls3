// Code generated by MockGen. DO NOT EDIT.
// Source: bucket_processor.go
//
// Generated by this command:
//
//	mockgen -source=bucket_processor.go -destination=mock_bucket_processor.go -package=app -write_package_comment=false
package app

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIBucketProcessor is a mock of IBucketProcessor interface.
type MockIBucketProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockIBucketProcessorMockRecorder
}

// MockIBucketProcessorMockRecorder is the mock recorder for MockIBucketProcessor.
type MockIBucketProcessorMockRecorder struct {
	mock *MockIBucketProcessor
}

// NewMockIBucketProcessor creates a new mock instance.
func NewMockIBucketProcessor(ctrl *gomock.Controller) *MockIBucketProcessor {
	mock := &MockIBucketProcessor{ctrl: ctrl}
	mock.recorder = &MockIBucketProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBucketProcessor) EXPECT() *MockIBucketProcessorMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockIBucketProcessor) Process(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Process indicates an expected call of Process.
func (mr *MockIBucketProcessorMockRecorder) Process(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockIBucketProcessor)(nil).Process), ctx)
}
